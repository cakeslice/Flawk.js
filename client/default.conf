#
# Copyright (c) 2020 Jos√© Guerreiro. All rights reserved.
#
# This source code is licensed under the MIT license found in the
# LICENSE file in the root directory of this source tree.
# 

server {
  gzip on;
  gzip_disable "msie6";
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  location ~* (\.html|\/service-worker\.js)$ {
    expires -1y;
    add_header Pragma "no-cache";
    add_header Cache-Control "public";
  }
  location ~* \.(txt|js|otf|mp3|woff|woff2|mp4|webm|scss|css|map|png|jpg|jpeg|gif|svg|ico|json)$ {
    expires 1y;
    add_header Cache-Control "public, immutable";
  }

  # Don't compress already compressed files
	location ~ .+\.(data|symbols\.json)\.unityweb$ {
		gzip off;
		add_header Content-Encoding br;
		default_type application/octet-stream;
	}
	location ~ .+\.js\.unityweb$ {
		gzip off;
		add_header Content-Encoding br;
		default_type application/javascript;
	}
	location ~ .+\.wasm\.unityweb$ {
		gzip off;
		add_header Content-Encoding br;
		default_type application/wasm;
	}
	location ~ .+\.(data|symbols\.json)\.gz$ {
		gzip off; # Do not attempt dynamic gzip compression on an already compressed file
		add_header Content-Encoding gzip;
		default_type application/octet-stream;
	}
	location ~ .+\.js\.gz$ {
		gzip off; # Do not attempt dynamic gzip compression on an already compressed file
		add_header Content-Encoding gzip;
		default_type application/javascript;
	}
	location ~ .+\.wasm\.gz$ {
		gzip off; # Do not attempt dynamic gzip compression on an already compressed file
		add_header Content-Encoding gzip;
		# Enable streaming WebAssembly compilation by specifying the correct MIME type for
		# Wasm files.
		default_type application/wasm;
	}

  # SEO files
  location = /robots.txt { 
    log_not_found off; 
  }
  location = /sitemap.xml { 
    log_not_found off;
  }
  location = /favicon.ico { 
    log_not_found off; 
  }

  listen 80;
  location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    try_files $uri $uri/ /index.html;
  }
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }
}
