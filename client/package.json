{
	"name": "flawk-frontend",
	"version": "1.0.0",
	"private": true,
	"engines": {
		"node": "16.13.0"
	},
	"scripts": {
		"env:dev": "env-cmd -f ./_env/dev.env",
		"env:staging": "env-cmd -f ./_env/staging.env",
		"env:prod": "env-cmd -f ./_env/prod.env",
		"- MAIN SCRIPTS -": "-----------------------------",
		"start:dev": "npm run env:dev npm run startLocal",
		"start:staging": "npm run env:staging npm run startLocal",
		"start:prod": "npm run env:prod npm run startLocal",
		"start_android:dev": "npm run env:dev npm run startAndroid",
		"start_android:staging": "npm run env:staging npm run startAndroid",
		"start_android:prod": "npm run env:prod npm run startAndroid",
		"start_ios:dev": "npm run env:dev npm run startiOS",
		"start_ios:staging": "npm run env:staging npm run startiOS",
		"start_ios:prod": "npm run env:prod npm run startiOS",
		"build_local:staging": "npm run env:staging npm run buildLocal && npm run serve",
		"build_local:prod": "npm run env:prod npm run buildLocal && npm run serve",
		"serve": "cd build && npx live-server && cd ..",
		"build_docker:staging": "npm run env:staging npm run buildPushDocker",
		"build_docker:prod": "npm run env:prod npm run buildPushDocker",
		"build_android:staging": "npm run env:staging npm run buildAndroid",
		"build_android:prod": "npm run env:prod npm run buildAndroid",
		"package_android:dev": "npm run env:dev npm run packageAndroid",
		"package_android:staging": "npm run env:staging npm run packageAndroid",
		"package_android:prod": "npm run env:prod npm run packageAndroid",
		"generate_android_key": "keytool -genkey -keyalg RSA -validity 20000 -alias android_key -v -keystore ./_env/android_keystore_new.env",
		"generate_mobile_icons": "npx cordova-res ios --skip-config --copy & npx cordova-res android --skip-config --copy",
		"- HELPER SCRIPTS -": "-----------------------------",
		"startLocal": "npm run lintCI && npm run lintTypescriptCI && vite --host",
		"startAndroid": "npm run buildLocal && npx cap sync && cd android && gradlew assembleDebug && gradlew installDebug && cd ..",
		"startiOS": "npm run buildLocal && npx cap sync && npx cap open ios",
		"buildCI": "npm run lintCI && tsc --noEmit && npx --yes browserslist@latest --update-db updates caniuse-lite && vite --sourcemap build",
		"buildLocal": "npm run generateFavicon && npm run auditCI && npm run testCI && npm run buildCI && npm run analyzeBundle",
		"buildPushDocker": "npm run buildLocal && cross-env-shell docker image build -t $DOCKER_IMAGE . -f Dockerfile.local --platform linux/amd64 && cross-env-shell docker push $DOCKER_IMAGE && cross-env-shell docker run --rm caprover/cli-caprover:v2.1.1 caprover deploy --caproverUrl $CAPROVER_URL --caproverPassword $CAPROVER_PASSWORD --caproverApp $CAPROVER_APP --imageName $DOCKER_IMAGE && cross-env-shell docker image rm $DOCKER_IMAGE",
		"buildAndroid": "npm run buildLocal && npm run packageAndroid",
		"packageAndroid": "npx cap sync && cd android && gradlew bundleRelease && cd .. && cross-env-shell jarsigner -keystore ./_env/android_keystore.env -storepass $ANDROID_KEYSTORE_PASS ./android/app/build/outputs/bundle/release/app-release.aab $ANDROID_KEYSTORE_ALIAS",
		"- EXTRA SCRIPTS -": "-----------------------------",
		"precommit": "npm-run-all --aggregate-output --parallel checkStaged",
		"postinstall": "patch-package && cd .. && git config core.hooksPath ./git-hooks && cd client",
		"test": "del-cli ./coverage/* && cross-env jest --coverage --runInBand",
		"testCI": "cross-env jest --bail --runInBand",
		"cypress": "npx cypress open",
		"cypressCI": "npx cypress run",
		"prettierFix": "prettier --write ./src",
		"prettierCI": "prettier --check ./",
		"lintCI": "eslint --cache --quiet ./",
		"lintTypescriptCI": "tsc --noEmit --incremental",
		"auditFix": "npm audit fix && npm run auditCI",
		"auditCI": "npm audit --production --audit-level=critical",
		"checkStaged": "lint-staged --no-stash",
		"analyzeBundle": "source-map-explorer --no-border-checks ./build/assets/*.js",
		"generateFavicon": "icon-gen -i ./public/favicon.svg -o ./public --favicon --favicon-ico-sizes 16,32 --favicon-png-sizes 16,32,1024"
	},
	"dependencies": {
		"@capacitor/android": "^3.3.2",
		"@capacitor/app": "^1.0.6",
		"@capacitor/camera": "^1.2.1",
		"@capacitor/cli": "^3.3.2",
		"@capacitor/core": "^3.3.2",
		"@capacitor/ios": "^3.3.2",
		"@capacitor/local-notifications": "^1.0.9",
		"@capacitor/splash-screen": "^1.1.6",
		"@capacitor/storage": "^1.2.3",
		"@faker-js/faker": "^6.0.0",
		"@reduxjs/toolkit": "^1.6.2",
		"@sentry/integrations": "^7.40.0",
		"@sentry/react": "^7.40.0",
		"@sentry/tracing": "^7.40.0",
		"@stripe/stripe-js": "^1.23.0",
		"abortcontroller-polyfill": "^1.7.3",
		"body-scroll-lock": "^3.1.5",
		"canvas-to-blob": "^1.0.0",
		"chartjs-chart-treemap": "^2.0.2",
		"chartjs-plugin-datalabels": "^2.0.0",
		"color-blend": "^3.0.1",
		"countries-list": "^2.6.1",
		"date-fns": "^2.28.0",
		"ethers": "^5.6.2",
		"formik": "^2.2.9",
		"framer-motion": "^4.1.17",
		"ga-gtag": "^1.1.1",
		"hex-rgb": "^5.0.0",
		"html-react-parser": "^1.4.0",
		"icon-gen": "^3.0.1",
		"immer": "^9.0.6",
		"local-storage-fallback": "^4.1.2",
		"lodash": "^4.17.21",
		"numeral": "^2.0.6",
		"rc-slider": "^9.7.4",
		"react": "^17.0.2",
		"react-beforeunload": "^2.5.2",
		"react-chartjs-2": "^4.0.1",
		"react-copy-to-clipboard": "^5.0.4",
		"react-datetime": "^3.1.1",
		"react-dom": "^17.0.2",
		"react-dropzone": "^11.4.2",
		"react-error-boundary": "^3.1.4",
		"react-export-excel-fixed-xlsx": "^0.5.3",
		"react-fast-compare": "^3.2.0",
		"react-flagkit": "^2.0.4",
		"react-focus-lock": "^2.7.1",
		"react-git-info": "^2.0.0",
		"react-google-recaptcha": "^2.1.0",
		"react-helmet": "^6.1.0",
		"react-image": "^4.0.3",
		"react-input-mask": "^2.0.4",
		"react-intersection-observer": "^8.32.4",
		"react-markdown": "^8.0.3",
		"react-number-format": "^4.9.3",
		"react-popper-tooltip": "^3.1.1",
		"react-portal": "^4.2.1",
		"react-quill": "^2.0.0-beta.4",
		"react-reddit-pixel": "^1.0.0",
		"react-redux": "^7.2.6",
		"react-responsive": "^8.2.0",
		"react-router-dom": "^5.3.0",
		"react-select": "^5.2.1",
		"react-sizeme": "^3.0.2",
		"react-spinners-kit": "^1.9.1",
		"react-sticky-el": "^2.0.9",
		"react-syntax-highlighter": "^15.4.5",
		"react-textarea-autosize": "^8.3.3",
		"react-to-print": "^2.14.1",
		"react-toastify": "^9.0.4",
		"react-transition-group": "^4.4.2",
		"react-twitter-pixel": "^0.0.3",
		"react-unity-webgl": "^8.8.0",
		"react-visibility-sensor": "^5.1.1",
		"redux": "^4.1.2",
		"redux-logger": "^3.0.6",
		"remark-gfm": "^3.0.1",
		"resize-observer": "^1.0.4",
		"socket.io-client": "^4.5.3",
		"ultimate-pagination": "^1.0.0",
		"uniqolor": "^1.0.1",
		"universal-cookie": "^4.0.4",
		"uuid": "^8.3.2",
		"validator": "^13.7.0",
		"web3modal": "^1.9.6"
	},
	"devDependencies": {
		"@babel/eslint-parser": "^7.18.2",
		"@babel/node": "^7.16.0",
		"@babel/preset-env": "^7.18.2",
		"@babel/preset-react": "^7.17.12",
		"@babel/preset-typescript": "^7.17.12",
		"@testing-library/jest-dom": "^5.15.1",
		"@testing-library/react": "^12.1.2",
		"@testing-library/user-event": "^13.5.0",
		"@toolz/use-constructor": "^1.0.1",
		"@types/body-scroll-lock": "^3.1.0",
		"@types/jest": "^27.5.2",
		"@types/lodash": "^4.14.177",
		"@types/node": "^16.11.10",
		"@types/numeral": "^2.0.2",
		"@types/react": "^17.0.45",
		"@types/react-beforeunload": "^2.1.1",
		"@types/react-copy-to-clipboard": "^5.0.2",
		"@types/react-dom": "^17.0.17",
		"@types/react-google-recaptcha": "^2.1.2",
		"@types/react-helmet": "^6.1.4",
		"@types/react-input-mask": "^2.0.5",
		"@types/react-portal": "^4.0.4",
		"@types/react-responsive": "^8.0.4",
		"@types/react-router-dom": "^5.3.2",
		"@types/react-sticky-el": "^1.0.3",
		"@types/react-syntax-highlighter": "^13.5.2",
		"@types/redux-logger": "^3.0.9",
		"@types/uuid": "^8.3.3",
		"@types/validator": "^13.7.0",
		"@vitejs/plugin-react": "^1.3.2",
		"browserslist": "^4.18.1",
		"cross-env": "^7.0.3",
		"cypress": "^10.0.3",
		"del-cli": "^4.0.1",
		"env-cmd": "^10.1.0",
		"eslint-config-prettier": "^8.5.0",
		"eslint-config-react-app": "^6.0.0",
		"eslint-plugin-cypress": "^2.12.1",
		"eslint-plugin-import": "^2.26.0",
		"eslint-plugin-jsdoc": "^37.0.3",
		"eslint-plugin-no-secrets": "^0.8.9",
		"eslint-plugin-prettier": "^4.2.1",
		"eslint-plugin-security": "^1.4.0",
		"eslint-plugin-unused-imports": "^1.1.5",
		"glamor": "^2.20.40",
		"identity-obj-proxy": "^3.0.0",
		"jest": "^28.1.1",
		"jest-environment-jsdom": "^28.1.1",
		"lint-staged": "^12.1.2",
		"npm-run-all": "^4.1.5",
		"patch-package": "^6.4.7",
		"prettier": "^2.4.1",
		"sass": "^1.43.4",
		"source-map-explorer": "^2.5.2",
		"typescript": "^4.7.3",
		"vite": "^2.9.10",
		"vite-imagetools": "^4.0.9",
		"vite-plugin-babel-macros": "^1.0.6",
		"vite-plugin-checker": "^0.4.6",
		"vite-tsconfig-paths": "^3.5.0"
	},
	"lint-staged": {
		"*.{js,jsx,css,less,scss,md,ts,tsx}": [
			"eslint --cache --quiet"
		]
	},
	"lint-staged_EXTRA": {
		"*.{js,jsx,css,less,scss,md,ts,tsx}": [
			"cross-env jest --passWithNoTests --bail --runInBand --findRelatedTests"
		]
	},
	"jest": {
		"testEnvironment": "jsdom",
		"testPathIgnorePatterns": [
			"/node_modules/",
			"/coverage/",
			"/build/",
			"/android/",
			"/ios/",
			"/cypress/"
		],
		"coveragePathIgnorePatterns": [
			"/node_modules/",
			"/coverage/",
			"/build/",
			"/android/",
			"/ios/",
			"/cypress/"
		],
		"collectCoverageFrom": [
			"**/*.{js,jsx,ts,tsx}",
			"!**/*.d.ts",
			"!**/node_modules/**"
		],
		"testMatch": [
			"**/*.test.js",
			"**/*.test.ts",
			"**/*.test.jsx",
			"**/*.test.tsx"
		],
		"modulePaths": [
			"<rootDir>/src/"
		],
		"setupFilesAfterEnv": [
			"<rootDir>/jest.setup.ts"
		],
		"transformIgnorePatterns": [
			"node_modules/(?!hex-rgb)"
		],
		"moduleNameMapper": {
			"\\.(css|sass|scss)$": "identity-obj-proxy"
		}
	},
	"browserslist": {
		"production": [
			">0.2%",
			"not dead",
			"not ie <= 11",
			"not op_mini all"
		],
		"development": [
			"last 1 chrome version",
			"last 1 firefox version",
			"last 1 safari version"
		]
	}
}
